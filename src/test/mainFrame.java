/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

/**
 *
 * @author Mashi
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelEvenements = new javax.swing.JPanel();
        LbEvenement = new javax.swing.JLabel();
        BtAjoutEvenement = new javax.swing.JButton();
        BtModifierEvenement = new javax.swing.JButton();
        BtSupprEvenement = new javax.swing.JButton();
        ScrollTableEvenements = new javax.swing.JScrollPane();
        TableEvenements = new javax.swing.JTable()
        {
            public boolean isCellEditable(int rowIndex, int colIndex)
            {
                return false;   //Disallow the editing of any cell
            }
        }
        ;
        jPanel1 = new javax.swing.JPanel();
        canvas1 = new java.awt.Canvas();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelEvenements.setBackground(new java.awt.Color(153, 255, 153));
        PanelEvenements.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        LbEvenement.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        LbEvenement.setText("Ev√©nements");

        BtAjoutEvenement.setText("+");
        BtAjoutEvenement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtAjoutEvenementActionPerformed(evt);
            }
        });

        BtModifierEvenement.setText("~");
        BtModifierEvenement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtModifierEvenementActionPerformed(evt);
            }
        });

        BtSupprEvenement.setText("-");
        BtSupprEvenement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtSupprEvenementActionPerformed(evt);
            }
        });

        TableEvenements.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nom", "Type", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableEvenements.setDragEnabled(true);
        TableEvenements.setDropMode(javax.swing.DropMode.ON);
        TableEvenements.setEditingColumn(1);
        TableEvenements.setEditingRow(1);
        ScrollTableEvenements.setViewportView(TableEvenements);

        javax.swing.GroupLayout PanelEvenementsLayout = new javax.swing.GroupLayout(PanelEvenements);
        PanelEvenements.setLayout(PanelEvenementsLayout);
        PanelEvenementsLayout.setHorizontalGroup(
            PanelEvenementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEvenementsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LbEvenement, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtAjoutEvenement, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtModifierEvenement, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtSupprEvenement, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(ScrollTableEvenements)
        );
        PanelEvenementsLayout.setVerticalGroup(
            PanelEvenementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEvenementsLayout.createSequentialGroup()
                .addGroup(PanelEvenementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LbEvenement)
                    .addGroup(PanelEvenementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BtAjoutEvenement)
                        .addComponent(BtModifierEvenement)
                        .addComponent(BtSupprEvenement)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ScrollTableEvenements, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 338, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelEvenements, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(canvas1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(canvas1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelEvenements, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtAjoutEvenementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtAjoutEvenementActionPerformed
//        Main.CreationEvenements.chargerInterface();
//        Main.CreationEvenements.setVisible(true);
    }//GEN-LAST:event_BtAjoutEvenementActionPerformed

    private void BtModifierEvenementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtModifierEvenementActionPerformed
//        if(TableEvenements.getSelectedRow()>=0)
//        {
//            String idE=TableEvenements.getValueAt(TableEvenements.getSelectedRow(), 0).toString();
//            ligneModifEvenement=TableEvenements.getSelectedRow();
//            //on ouvre la contrainte sur profil qu'on souhaite modifier
//            Element eve=evenementParId(idE);
//            if(TableEvenements.getValueAt(TableEvenements.getSelectedRow(), 1).toString().equals(stringTimerFixe))
//            {
//                Main.CreationEvenements.chargerInterface();
//                modifEvenementTimerFin = true;
//                Main.CreationEvenements.modifEvenementTimerFin(eve);
//            }
//            else if(TableEvenements.getValueAt(TableEvenements.getSelectedRow(), 1).toString().equals(stringActionUtilisateur))
//            {
//                modifEvenementActionElem = true;
//                Main.CreationEvenements.modifEvenementActionElem(eve);
//            }
//            else if(TableEvenements.getValueAt(TableEvenements.getSelectedRow(), 1).toString().equals(stringEveSA))
//            {
//                Main.CreationEvenements.chargerInterface();
//                modifEveSA = true;
//                Main.CreationEvenements.modifEveSA(eve);
//            }
//            else if(eve.getAttributeValue(attributTypeEve).equals(attributTimerRelatif))
//            {
//                Main.CreationEvenements.chargerInterface();
//                modifEvenementTimerRelatif = true;
//                Main.CreationEvenements.modifEvenementTimerRelatif(eve);
//            }
//            else
//            {
//                System.out.println("on ne sait pas encore modifier des evenements "+TableEvenements.getValueAt(TableEvenements.getSelectedRow(), 1).toString());
//            }
//        }
//        else
//        {
//            JOptionPane.showMessageDialog(null,"Vous devez s√©lectionner un √©v√©nement", "Information", JOptionPane.INFORMATION_MESSAGE);
//        }
    }//GEN-LAST:event_BtModifierEvenementActionPerformed

    private void BtSupprEvenementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtSupprEvenementActionPerformed
//        if(TableEvenements.getSelectedRow()>=0)
//        {
//            String id=(String) TableEvenements.getValueAt(TableEvenements.getSelectedRow(), 0);
//            if(evenementEstUtilise(id))
//            {
//                JOptionPane.showMessageDialog(null,"Vous ne pouvez pas supprimer un √©v√©n√©ment utilis√© dans une r√®gle d'assistance", "Information", JOptionPane.INFORMATION_MESSAGE);
//            }
//            else    //si la condition n'est utilis√©e dans aucune r√®gles d'assistance, on peut la supprimer
//            {
//                Element eve=evenementParId((String) TableEvenements.getValueAt(TableEvenements.getSelectedRow(), 0));
//                lesEvenements.remove(eve);
//                reafficherEvenements();
//            }
//        }
//        else
//        {
//            JOptionPane.showMessageDialog(null,"Vous devez s√©lectionner une condition", "Information", JOptionPane.INFORMATION_MESSAGE);
//        }
    }//GEN-LAST:event_BtSupprEvenementActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtAjoutEvenement;
    private javax.swing.JButton BtModifierEvenement;
    private javax.swing.JButton BtSupprEvenement;
    private javax.swing.JLabel LbEvenement;
    private javax.swing.JPanel PanelEvenements;
    private javax.swing.JScrollPane ScrollTableEvenements;
    public javax.swing.JTable TableEvenements;
    private java.awt.Canvas canvas1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
